# Generated by Django 5.0.1 on 2025-02-24 16:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_id', models.IntegerField()),
                ('condition_enum', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'm_condition',
            },
        ),
        migrations.CreateModel(
            name='EbayStoreType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_type', models.CharField(max_length=50, unique=True)),
                ('monthly_fee', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('monthly_fee_annual', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('free_listings', models.IntegerField()),
                ('listing_fee_over_limit', models.DecimalField(decimal_places=2, max_digits=4)),
                ('final_value_fee', models.DecimalField(decimal_places=1, max_digits=4)),
                ('final_value_fee_category_discount', models.BooleanField(default=False)),
                ('international_fee', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'm_ebay_store_type',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'm_service',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'm_status',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'm_tax',
            },
        ),
        migrations.CreateModel(
            name='YahooAuctionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'm_yahoo_auction_status',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('family_name', models.CharField(blank=True, max_length=255, null=True)),
                ('given_name', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EbayToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_access_token', models.TextField(db_column='access_token')),
                ('_refresh_token', models.TextField(db_column='refresh_token')),
                ('expires_at', models.DateTimeField()),
                ('scope', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ebay_tokens',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(max_length=2, unique=True)),
                ('country_name', models.CharField(max_length=100)),
                ('country_name_jp', models.CharField(max_length=100)),
                ('zone', models.CharField(max_length=1)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.service')),
            ],
            options={
                'db_table': 'm_countries',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yahoo_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('yahoo_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_dev_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('deepl_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('description_template_1', models.TextField(blank=True, null=True)),
                ('description_template_2', models.TextField(blank=True, null=True)),
                ('description_template_3', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ebay_store_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='settings', to='api.ebaystoretype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'm_setting',
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(max_length=1)),
                ('weight', models.IntegerField()),
                ('basic_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.service')),
            ],
            options={
                'db_table': 'm_shipping',
            },
        ),
        migrations.CreateModel(
            name='ShippingSurcharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surcharge_type', models.CharField(max_length=50)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fixed_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.service')),
            ],
            options={
                'db_table': 'm_shipping_surcharge',
            },
        ),
        migrations.CreateModel(
            name='EbayRegisterFromYahooAuction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=255, unique=True)),
                ('offer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ebay_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ebay_shipping_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('final_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('yahoo_auction_id', models.CharField(max_length=255)),
                ('yahoo_auction_url', models.CharField(blank=True, max_length=255, null=True)),
                ('yahoo_auction_item_name', models.CharField(max_length=255)),
                ('yahoo_auction_item_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('yahoo_auction_shipping', models.DecimalField(decimal_places=2, max_digits=10)),
                ('yahoo_auction_end_time', models.DateTimeField()),
                ('update_datetime', models.DateTimeField(auto_now=True)),
                ('insert_datetime', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.status')),
                ('yahoo_auction_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.yahooauctionstatus')),
            ],
            options={
                'db_table': 'ebay_register_from_yahoo_auction',
                'indexes': [models.Index(fields=['sku'], name='ebay_regist_sku_298b12_idx'), models.Index(fields=['status'], name='ebay_regist_status__ccc4c9_idx'), models.Index(fields=['yahoo_auction_status'], name='ebay_regist_yahoo_a_e507b4_idx')],
            },
        ),
    ]
